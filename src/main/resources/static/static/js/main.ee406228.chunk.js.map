{"version":3,"sources":["index.js"],"names":["FreeBoiler","class","onClick","props","React","Component","OccupiyBoiler","StateChanger","this","state","match","State","Boiler","queryState","fetch","then","response","json","data","console","log","postStateChange","newState","url","method","myJson","alert","handleStateChange","setState","className","ReactDOM","render","document","getElementById"],"mappings":"8NAIMA,G,6KACM,IAAD,OACP,OACE,6BACE,uBAAGC,MAAM,YAAT,2BACA,4BAAQC,QAAS,kBAAM,EAAKC,MAAMD,QAAQ,UAA1C,gB,GALiBE,IAAMC,YAWzBC,E,uKACM,IAAD,OACP,OACE,6BACE,uBAAIL,MAAM,QAAV,2BACA,4BAAQC,QAAS,kBAAM,EAAKC,MAAMD,QAAQ,cAA1C,kB,GALoBE,IAAMC,WAW5BE,E,uKAEF,OAAIC,KAAKL,MAAMM,MAAMC,MAAM,QAEvB,kBAACJ,EAAD,CAAeJ,QAASM,KAAKL,MAAMD,UAInC,kBAACF,EAAD,CAAYE,QAASM,KAAKL,MAAMD,c,GARbE,IAAMC,WAc3BM,E,uKAEF,OACA,wCAAcH,KAAKL,MAAMM,W,GAHTL,IAAMC,WAQpBO,E,kDACJ,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IAORU,WAAa,WACXC,MAAM,UACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIC,QAAQC,IAAIF,OAXX,EAcnBG,gBAAkB,SAACC,GACjB,IAAIC,EAAM,GAERA,EADED,EAASZ,MAAM,QACX,aAEA,iBAERI,MAAMS,EAAK,CAACC,OAAQ,SACnBT,MAAK,SAASC,GACb,OAAOA,EAASC,UAEjBF,MAAK,SAASU,GACbC,MAAMD,OA1BS,EA8BnBE,kBAAoB,SAACL,GACnB,EAAKM,SAAS,CAACnB,MAAOa,KA7BtB,EAAKb,MAAQ,CACXA,MAAO,QAET,EAAKI,aALY,E,qDAmCjB,OACE,yBAAKgB,UAAU,UACb,yBAAKA,UAAU,gBACb,kBAAClB,EAAD,CAAOF,MAAOD,KAAKC,MAAMA,SAE3B,yBAAKoB,UAAU,iBACb,kBAACtB,EAAD,CAAcL,QAASM,KAAKmB,kBAAmBlB,MAAOD,KAAKC,MAAMA,c,GA1CtDL,IAAMC,WAmD3ByB,IAASC,OACP,kBAACnB,EAAD,MACAoB,SAASC,eAAe,W","file":"static/js/main.ee406228.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass FreeBoiler extends React.Component {\n  render() {\n    return (\n      <div>\n        <p class=\"occupied\">Someone is using boiler</p>\n        <button onClick={() => this.props.onClick(\"Free\")}>Free it</button>\n      </div>\n    );\n  }\n}\n\nclass OccupiyBoiler extends React.Component {\n  render() {\n    return (\n      <div>\n        <p  class=\"free\">No one using boiler now</p>\n        <button onClick={() => this.props.onClick(\"Occupied\")}>Occupy it</button>\n      </div>\n    );\n  }\n}\n\nclass StateChanger extends React.Component {\n  render() {\n    if (this.props.state.match(\"Free\")) {\n      return (\n        <OccupiyBoiler onClick={this.props.onClick}/>\n      );\n    } else {\n      return (\n        <FreeBoiler onClick={this.props.onClick}/>\n      );\n    }\n  }\n}\n\nclass State extends React.Component {\n  render() {\n    return (\n    <p>boiler is {this.props.state}</p>\n    );\n  }\n}\n\nclass Boiler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      state: \"Free\"\n    };\n    this.queryState();\n  }\n\n  queryState = () => {\n    fetch('/state')\n      .then(response => response.json())\n      .then(data => console.log(data));\n  }\n\n  postStateChange = (newState) => {\n    let url = \"\";\n    if (newState.match(\"Free\")) {\n      url = \"state/free\";\n    } else {\n      url = \"state/occupied\";\n    }\n    fetch(url, {method: 'POST'})\n    .then(function(response) {\n      return response.json();\n    })\n    .then(function(myJson) {\n      alert(myJson);\n    });\n  }\n\n  handleStateChange = (newState) => {\n    this.setState({state: newState});\n  }\n\n  render() {\n    return (\n      <div className=\"boiler\">\n        <div className=\"boiler-state\">\n          <State state={this.state.state}/>\n        </div>\n        <div className=\"State-Changer\">\n          <StateChanger onClick={this.handleStateChange} state={this.state.state} />\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Boiler />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}