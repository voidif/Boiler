{"version":3,"sources":["timer.js","index.js"],"names":["Timer","props","countBegin","timer","setInterval","remainingSecond","minutes","getMinutesFromTotalSecond","seconds","getSecondFromTotalSecond","setState","clearInterval","queryState","totalSecond","Math","floor","state","this","Component","FreeBoiler","className","onClick","React","OccupiyBoiler","handleChange","event","time","target","value","type","onChange","StateChanger","match","State","Boiler","url","concat","fetch","mode","then","response","json","data","boilerState","remainingOccupiedTime","postStateChange","newState","method","handleStateChangeResult","status","handleStateChange","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f488654b.chunk.js","sourcesContent":["import React, {Component} from 'react'\n\nexport default class Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      minutes: 0,\n      seconds: 0,\n    }\n    this.remainingSecond = this.props.totalSecond;\n    if (this.remainingSecond > 0) {\n      this.countBegin();\n    }\n  }\n\n  componentWillUnmount(){\n    clearInterval(this.timer);\n  }\n  \n  countBegin = () => {\n    this.timer = setInterval(() => {\n      if (this.remainingSecond >= 0) {\n        let minutes = this.getMinutesFromTotalSecond(this.remainingSecond);\n        let seconds = this.getSecondFromTotalSecond(this.remainingSecond);\n        this.remainingSecond -= 1;\n        this.setState({\n          minutes : minutes,\n          seconds : seconds\n        })\n      } else {\n        clearInterval(this.timer);\n        this.props.queryState();\n      }\n    }, 1000);\n  }\n\n  getMinutesFromTotalSecond = (totalSecond) => {\n    return Math.floor(totalSecond / 60);\n  }\n\n  getSecondFromTotalSecond = (totalSecond) => {\n    return Math.floor(totalSecond % 60);\n  }\n\n  render() {\n    if (this.state.minutes === 0 && this.state.seconds === 0) {\n      return (<span>querying, please wait...</span>);\n    } else {\n      return (\n        <span>{this.state.minutes} minutes {this.state.seconds} seconds</span>\n      );\n    }\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Timer from './timer.js'\n\nconst server_address = \"http://127.0.0.1/\";\n\nclass FreeBoiler extends React.Component {\n  render() {\n    return (\n      <div>\n        <p className=\"occupied\">Someone is using boiler</p>\n        <p className=\"occupied\">estimated remaining time:</p> \n        <Timer totalSecond={this.props.totalSecond} queryState={this.props.queryState} /><br/><br/>\n        <button onClick={() => this.props.onClick(\"Free\")}>Free it Now</button>\n      </div>\n    );\n  }\n}\n\nclass OccupiyBoiler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: 5\n    };\n  }\n\n  handleChange = (event) => {\n    this.setState({time: event.target.value});\n  }\n\n  render() {\n    return (\n      <div>\n        <p  className=\"free\">No one using boiler now</p>\n        <p>input the time you want to use the boiler(unit: minute)</p>\n        <input type=\"text\" value={this.state.time} onChange={this.handleChange} />\n        <button onClick={() => this.props.onClick(\"Occupied\", this.state.time)}>Occupy it</button>\n      </div>\n    );\n  }\n}\n\nclass StateChanger extends React.Component {\n  render() {\n    if (this.props.state.match(\"Free\")) {\n      return (\n        <OccupiyBoiler onClick={this.props.onClick}/>\n      );\n    } else {\n      return (\n        <FreeBoiler \n          onClick={this.props.onClick} \n          totalSecond={this.props.totalSecond} \n          queryState={this.props.queryState}/>\n      );\n    }\n  }\n}\n\nclass State extends React.Component {\n  render() {\n    return (\n    <p>boiler is {this.props.state}</p>\n    );\n  }\n}\n\nclass Boiler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      state: \"Free\",\n      newState: \"\",\n      totalSecond: 0\n    };\n    this.queryState();\n  }\n\n  queryState = () => {\n    let url = server_address.concat(\"state\");\n    fetch(url, {mode: 'cors'})\n      .then(response => response.json())\n      .then(data => this.setState({\n        state: data.data.boilerState,\n        totalSecond: data.data.remainingOccupiedTime\n      }));\n  }\n\n  postStateChange = (newState, time) => {\n    let url = server_address;\n    if (newState.match(\"Free\")) {\n      url = url.concat(\"state/free\");\n    } else {\n      url = url.concat(`state/occupied?time=${time}`);\n    }\n    fetch(url, {\n      method: 'POST',\n      mode: 'cors',\n    })\n      .then(response => response.json())\n      .then(data => this.handleStateChangeResult(data.status));\n    this.setState({totalSecond: time * 60});\n  }\n\n  handleStateChangeResult(status) {\n    if (status === 1) {\n      let newState = this.state.newState;\n      this.setState({state: newState});\n    } else {\n      alert(\"change state failed, plase refresh and try again later\");\n    }\n  }\n\n  handleStateChange = (newState, time) => {\n    this.setState({newState: newState});\n    this.postStateChange(newState, time);\n  }\n\n  render() {\n    return (\n      <div className=\"boiler\">\n        <div className=\"boiler-state\">\n          <State state={this.state.state}/>\n        </div>\n        <div className=\"State-Changer\">\n          <StateChanger \n            onClick={this.handleStateChange} \n            state={this.state.state} \n            totalSecond={this.state.totalSecond}\n            queryState={this.queryState}/>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Boiler />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}